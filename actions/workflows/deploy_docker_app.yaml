version: 1.0

input:
  - app
  - app_version
  - project_tag
  - env
  - docker_host
  - saltmaster
  - docker_repository
  - dockercompose_path
  - only_pull_image
  - slack_webhook
  - notify_channel

tasks:

######  Git Pull App Config  ##############################

  git_drop_local_changes:
    action: salt.client
    input:
      module: git.stash
      matches: <% ctx(docker_host) %>
      args:
        - <% ctx(dockercompose_path) %>
    next:
      - when: <% succeeded() %>
        do: 
          - git_pull_config
      - when: <% failed() %>
        do: 
          - slack_fail

  git_pull_config:
    action: salt.client
    input:
      module: git.pull
      matches: <% ctx(docker_host) %>
      args:
        - <% ctx(dockercompose_path) %>
    next:
      - when: <% succeeded() %>
        do: 
          - replace_version_in_dockercompose
      - when: <% failed() %>
        do: 
          - slack_fail

######  Replace latest tag with the version in the docker-compose file  ##############################

  replace_version_in_dockercompose:
    action: salt.client
    input:
      module: file.replace
      matches: <% ctx(docker_host) %>
      args:
        - "<% ctx(dockercompose_path) %>/docker-compose.yml"
      kwargs: {"pattern":":latest", "repl":":<% ctx(app_version) %>"}
    next:
      - when: <% succeeded() %>
        do: 
          - notify_start_pullimage
      - when: <% failed() %>
        do: 
          - slack_fail

######   Notify start Pull Image ##############################

  notify_start_pullimage:
    action: "core.remote"
    input:
      cmd: "curl -X POST --data-urlencode \"payload={\"channel\": \"<% ctx(notify_channel) %>\", \"username\": \"Deploy Notifier\", \"text\": \"Starting pulling the image for *<% ctx(app) %>*, version *<% ctx(app_version) %>* to env: *<% ctx(env) %>*.\", \"icon_emoji\": \":male_mage:\"}\" <% ctx(slack_webhook) %>"
      hosts: "<% ctx(saltmaster) %>"
      username: "root"
    next:
      - when: <% succeeded() %>
        do: 
          - docker_compose_pull_image
      - when: <% failed() %>
        do: 
          - slack_fail

######   Pull docker image  ##############################

  docker_compose_pull_image:
    action: salt.client
    input:
      module: dockercompose.pull
      matches: <% ctx(docker_host) %>
      args:
        - "<% ctx(dockercompose_path) %>"
      kwargs: {"service_names": ["<% ctx(app) %>"]}
      timeout: 2400
    retry: 
      when: <% result().result.values().select($.status).contains(false) %>
      #when: <% failed() %>
      count: 3
      delay: 5
    next:
      - when: <% succeeded() and ctx(only_pull_image) != true and result().result.values().select($.status).contains(false) != true %>
        do: 
          - notify_start_deploy
      - when: <% succeeded() and ctx(only_pull_image) = true and result().result.values().select($.status).contains(false) != true %>
        publish: 
          - docker_pull_status: "<% result().result %>"
        do: 
          - notify_finish_pullimage
      - when: <% failed() or result().result.values().select($.status).contains(false) = true %>
        do: 
          - slack_fail_pullimage
  
######   Notify start  ##############################

  notify_start_deploy:
    action: "core.remote"
    input:
      cmd: "curl -X POST --data-urlencode \"payload={\"channel\": \"<% ctx(notify_channel) %>\", \"username\": \"Deploy Notifier\", \"text\": \"Starting deployment for *<% ctx(app) %>*, version `<% ctx(app_version) %>` to env: *<% ctx(env) %>*.\nSit tight this might take a while. I will let you know when all is done & dusted ... or something fail.\", \"icon_emoji\": \":male_mage:\"}\" <% ctx(slack_webhook) %>"
      hosts: "<% ctx(saltmaster) %>"
      username: "root"
    next:
      - when: <% succeeded() %>
        do: 
          - docker_compose_stop
      - when: <% failed() %>
        do: 
          - slack_fail

######   Docker-compose restart  ##############################

  docker_compose_stop:
    action: salt.client
    input:
      module: dockercompose.stop
      matches: <% ctx(docker_host) %>
      args:
        - "<% ctx(dockercompose_path) %>"
      kwargs: {"service_names": ["<% ctx(app) %>"]}
    next:
      - when: <% succeeded() %>
        do: 
          - docker_compose_start
      - when: <% failed() %>
        do: 
          - slack_fail

  docker_compose_start:
    action: salt.client
    input:
      module: dockercompose.up
      matches: <% ctx(docker_host) %>
      args:
        - "<% ctx(dockercompose_path) %>"
      kwargs: {"service_names": ["<% ctx(app) %>"]}
    next:
      - when: <% succeeded() %>
        do: 
          - remove_unused_images
      - when: <% failed() %>
        do: 
          - slack_fail

######   Docker Prune Unused Images  ##############################

  remove_unused_images:
    action: salt.client
    input:
      module: docker.prune
      matches: <% ctx(docker_host) %>
      args:
        - "images=true"
        - "dangling=false"
    next:
      - when: <% succeeded() %>
        do: 
          - show_docker_ps_info
      - when: <% failed() %>
        do: 
          - slack_fail

######   Show docker ps info  ##############################

  show_docker_ps_info:
    action: salt.client
    input:
      module: docker.ps
      matches: <% ctx(docker_host) %>
      args:
        - "filters={'label': 'com.docker.compose.service=<% ctx(app) %>'}"
    next:
      - when: <% succeeded() %>
        do: 
          - notify_finish
      - when: <% failed() %>
        do: 
          - slack_fail

######   NOTIFY FINISH  ##############################

  notify_finish:
    action: "core.remote"
    input:
      cmd: "curl -X POST --data-urlencode \"payload={\"channel\": \"<% ctx(notify_channel) %>\", \"username\": \"Deploy Notifier\", \"text\": \"<% ctx(env) %>(<% ctx(app) %>) Deployment finished !\", \"icon_emoji\": \":male_mage:\"}\" <% ctx(slack_webhook) %>"
      hosts: "<% ctx(saltmaster) %>"
      username: "root"


  notify_finish_pullimage:
    action: "core.remote"
    input:
      cmd: "curl -X POST --data-urlencode \"payload={\"channel\": \"<% ctx(notify_channel) %>\", \"username\": \"Deploy Notifier\", \"text\": \"<% ctx(env) %>(<% ctx(app) %>) Pulling the image finished!\"icon_emoji\": \":male_mage:\"}\" <% ctx(slack_webhook) %>"
      hosts: "<% ctx(saltmaster) %>"
      username: "root"

######   FAIL notifications  ##############################

  slack_fail:
    action: "core.remote"
    input:
      cmd: "curl -X POST --data-urlencode \"payload={\"channel\": \"<% ctx(notify_channel) %>\", \"username\": \"Deploy Notifier\", \"text\": \"<% ctx(env) %>(<% ctx(app) %>) Deployment workflow failed. Please check logs\", \"icon_emoji\": \":male_mage:\"}\" <% ctx(slack_webhook) %>"
      hosts: "<% ctx(saltmaster) %>"
      username: "root"
    next:
      - when: <% completed() %>
        do: 
          - fail

  slack_fail_pullimage:
    action: "core.remote"
    input:
      cmd: "curl -X POST --data-urlencode \"payload={\"channel\": \"<% ctx(notify_channel) %>\", \"username\": \"Deploy Notifier\", \"text\": \"<% ctx(env) %>(<% ctx(app) %>) Pulling the image version <% ctx(app_version) %> failed. Please check logs, or try again.\", \"icon_emoji\": \":male_mage:\"}\" <% ctx(slack_webhook) %>"
      hosts: "<% ctx(saltmaster) %>"
      username: "root"
    next:
      - when: <% completed() %>
        do: 
          - fail